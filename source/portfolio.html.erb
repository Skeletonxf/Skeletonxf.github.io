---
layout: portfolio
---

<main>
  <header id="header">
    <h1>Portfolio</h1>
  </header>
  <section id="intro" class="free-text">
    <p>I'm currently a computer science university student finishing my Master's year.</p>
    <article class="overview">
      <p>
      I started programming in my own time with Scratch in 2010 and later taught
      myself Lua and Java. I've gained valuable team working skills from helping
      AvatarMC.com on various Java projects in my spare time and from several
      semester-long group projects at university. At university I've explored
      many different areas of computer science and programming including:
      machine learning, functional programming and mobile app development.
      Outside my course I've published 2 Mozilla Firefox Web Extensions and
      continue to maintain the third I built in my Dissertation.
      </p>
    </article>
  </section>
  <section id="grid">
    <div id="one" class="item">
      <div class="item-content">
        <h2><a href="https://github.com/Skeletonxf/totally-automated-a11y-scanner">Dissertation</a></h2>
        <img src="images/help-page-screenshot.png" alt="Totally Automated Accessibility Scanner Help Page Screenshot, developed for my Dissertation"></img>
        <div class="text">
            <p>I choose to do my Dissertation on automatically detecting accessibility issues in websites. I've released the tool I built on addons.mozilla.org and open sourced it. It checks for many different WCAG criteria relating to the alternative ways some people access online content, such as HTML markup that assists screen readers. I am in the process of porting back the additional tests that I wrote to the project I used as the base for it. Hopefully web developers can find it useful for their own websites, the user testing I conducted seems to indicate so. It is slowly gaining users.</p>
            <p>Obviously this webpage passes all of my tool's tests</p>
          </div>
      </div>
    </div>
    <div id="two" class="item">
      <div class="item-content">
        <h2>Web Extensions <a href="https://github.com/Skeletonxf/duplicate-tab/" aria-label="1st WebExtension source code link">[1]</a> <a href="https://github.com/Skeletonxf/image-extract" aria-label="2nd WebExtension source code link">[2]</a></h2>
        <img src="images/combined-addons.svg" alt="WebExtension logos"></img>
        <div class="text"><p>As of 2019/03/10 my two personal WebExtensions have a combined user count of 2119. I developed both to improve my workflow, they aid in duplicating tabs and accessing images on a page respectively. The main challenge for me was learning how to use the WebExtension APIs, as this was my first introduction to modern ES6 JavaScript features like Promises. They both receive feature requests every now and then and I'm glad people found them useful. I couldn't know at the time, but the knowledge I gained from these projects helped me immensely with my Dissertation and other coursework.</p></div>
      </div>
    </div>
    <div id="three" class="item">
      <div class="item-content">
        <h2><a href="https://github.com/Skeletonxf/easy-ml">Easy ML</a></h2>
        <img src="images/easy-ml.png" alt="Screenshot of Easy ML library release" class="small-image"></img>
        <div class="text"><p>I've had roughly one machine learning module each year, which is just enough to forget what I was taught by the next time I need it. This happened with the python projects too, I forgot enough of how to use numpy and other libraries that I had to relearn a lot to get back up to speed. Now I've released my own machine learning library written in Rust. The library I've written is almost certainly slower than numpy and does far less, but my goal from the start was to ensure I understood the topics and algorithms I had been taught by coding them in every detail.  Now when I forget the theory again I can read something I wrote in my own words that I deliberately made sure has good documentation and get back up to speed.</p></div>
      </div>
    </div>
    <div id="four" class="item no-cursor">
      <div class="item-content">
        <h2>AvatarMC.com</h2>
        <img src="https://www.avatarmc.com/static/img/androidlogo.png" alt="AvatarMC.com logo"></img>
        <div class="text">
            <p>In my spare time I worked on Java projects as part of a small volunteer team at AvatarMC.com for 3 years. I worked on several projects for the Minecraft server over the holidays, often developing a minimum viable product or specific feature before I went back to uni. Some of the MVPs I made included a player location based music playing system, an in game navigational tool based on a 3-dimensional grid of waypoints and refactoring an existing 'road' system. I started with little knowledge of object orientated programming and version control and have since learnt a lot in these areas.</p>
            <p>The projects complemented my more theoretical content at University, in particular: graph theory, sorting and complexity analysis.</p>
        </div>
      </div>
    </div>
    <div id="five" class="item">
      <div class="item-content">
        <h2><a href="risky.html">Risky Conquest (Web Game)</a></h2>
        <img src="images/risky-conquest.png" alt="Screenshot of Risky Conquest game"></img>
        <div class="text"><p>At the start of a Summer break I had a block of time with few commitments and wanted to 0-100 something. There was also a forum game I played a few years prior that was well defined and deliberately really simple that I had enjoyed playing. I decided to turn it into an automated game on the Web, because UI is easy to design with HTML/CSS compared to desktop applications and a Web format is easily shared. 2500 lines of JavaScript, lots of graph manipulation, lists and maps later and I finished it. To my knowledge the code has 0 bugs and once I cached the results of my breadth first search pathing the game updated very quickly. In hindsight I would split the logic into multiple files if I were to do something similar again, though I think the data and function based approach I took worked better than an object orientated one would have - most concerns were cross cutting.</p></div>
      </div>
    </div>
    <div id="six" class="item">
      <div class="item-content">
        <h2><a href="https://youtu.be/fWrJ7m5LLO4">Connect Four</a></h2>
        <img src="images/connect4-icon.png" alt="Connect 4 icon"></img>
        <div class="text"><p>One of my Java assignments was a semester long Connect 4 game, initially for playing on the command line and then over a graphical interface. Designing for blocking reads from the console in the first half of the assessment introduced lots of problems for the graphical half which I solved by using multiple threads. The assignment also involved creating an automated Connect 4 player which I implemented as a min-max game state search. Unfortunately the provided code we had to build our assignment on (for automated marking) was never licensed so I cannot distribute it. Overall I got 91% in the module.</p>
        <p>More recently I worked on a group project making a mobile app in Java. I focused on implementing the backend for the Model View ViewModel pattern and using threads to do expensive operations off the UI thread, though again I don't own all the copyright to distribute it.</p></div>
      </div>
    </div>
  </section>
  <section class="free-text">
    <p>More of my projects can be viewed at <a href="https://github.com/Skeletonxf">GitHub</a></p>
  </section>
</main>
